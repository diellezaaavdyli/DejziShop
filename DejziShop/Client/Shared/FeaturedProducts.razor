@inject IProductService ProductService
@implements IDisposable

<center><h2 class="sale-h2">See what's on <img src="../sale.png" width="200px;" /></h2></center>
@if (ProductService.Products == null || ProductService.Products.Count == 0)
{
    <h1 class="loading-products">@ProductService.Message</h1>
}
else
{
    <div class="container">
        @foreach (var product in ProductService.Products)
        {
            @if (product.Featured)
            {
                <div class="featured-product">
                    <div>
                        <a href="product/@product.Id">
                            @if (!string.IsNullOrEmpty(product.ImageUrl))
                            {
                                <img src="@product.ImageUrl">
                            }
                            else if (product.Images.Count > 0)
                            {
                                <img src="@product.Images[0].Data" />
                            }
                        </a>
                    </div>
                    <h4><a href="product/@product.Id">@product.Title</a></h4>
                    <h5 class="price" style="text-decoration: line-through;">
                        @GetOriginalPriceText(product)
                    </h5>
                    @if (product.Variants != null && product.Variants.Count > 0)
                    {
                        <h5 class="price">
                            $@product.Variants[0].Price
                        </h5>
                    }

                </div>
            }
        }
    </div>
   
}



<!-- End of .container -->

@code {
    protected override void OnInitialized()
    {
        ProductService.ProductsChanged += StateHasChanged;
    }

    public void Dispose()
    {
        ProductService.ProductsChanged -= StateHasChanged;
    }

    private string GetOriginalPriceText(Product product)
    {
        var variants = product.Variants;

        if (variants.Count == 0)
        {
            return string.Empty;
        }
        else
        {
            return $"${variants[0].OriginalPrice}";
        }
  
    }
}
